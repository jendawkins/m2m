source('~/Dropbox (MIT)/Microbes to Metabolomes/Code/use_classy_fire.R')
source('~/Dropbox (MIT)/Microbes to Metabolomes/Code/use_classy_fire.R')
pwd
pwd()
temp <- read.csv("/Users/jendawk/Dropbox (MIT)/M2M/inputs/met_keys.csv")
temp <- read.csv("/Users/jendawk/Dropbox (MIT)/M2M/inputs/mets_keys.csv")
cmpd_list <- temp[,2]
cmpd_names <-temp[,1]
class_list <- c()
for (cmpd in cmpd_list){
Classification <- get_classification(cmpd)
class_list <- c(class_list, Classification)
}
class_list
tab = class_list[0]
tab = class_list[1]
tab
classification(tab)
classification(tab)
tab
classification(tab[1])
View(tab)
classification(tab[[1])
classification(tab[[1]])
t(classification(tab[[1]]))
merge(class_list[1][[1]], class_list[2][[1]], by='Level')
merge(classification(class_list[1][[1]]), classification(class_list[2][[1]]), by='Level')
classification(class_list[1][[1]])[:,:2]
classification(class_list[1][[1]])[,:2]
classification(class_list[1][[1]])[,2]
classification(class_list[1][[1]])[,[1,2]]
classification(class_list[1][[1]])[,1:2]
df_list <- c()
for (tab in class_list){
df <- data.table(classification(tab)[,1:2], key = 'Level')
df_list <- c(df_list, df)
}
df_list <- c()
for (tab in class_list){
df <- classification(tab)[,1:2]
rownames(df) <- df$Level
df$Level <- NULL
df_list <- c(df_list, df)
}
df_list
df_list[1]
df_list <- c()
for (tab in class_list){
df <- classification(tab)[,1:2]
rownames(df) <- df$Level
df_list <- c(df_list, df)
}
View(df_list)
df_list[1]
df_list[2]
df_list[3]
df <- classification(tab)[,1:2]
rownames(df) <- df$Level
df
df_list <- list()
for (tab in class_list){
df <- as.data.frame(classification(tab)[,1:2])
rownames(df) <- df$Level
df$Level <- NULL
df_list <- c(df_list, df)
}
df_list[1]
View(df_list)
df_list[["Classification"]]
df
df_list <- list()
for (tab in class_list){
df <- as.data.frame(classification(tab)[,1:2])
#  rownames(df) <- df$Level
#  df$Level <- NULL
df_list <- c(df_list, df)
}
merge(df_list, by = 'Level')
Reduce(function(..), merge(..., by = 'Level', all = T), df_list)
Reduce(function(...) merge(..., by = 'Level', all = T), df_list)
quit()
View(df_list)
df_list <- c()
for (tab in class_list){
df <- as.data.frame(classification(tab)[,1:2])
#  rownames(df) <- df$Level
#  df$Level <- NULL
df_list <- c(df_list, df)
}
View(df_list)
df_list <- list()
i = 1
for (tab in class_list){
df <- as.data.frame(classification(tab)[,1:2])
#  rownames(df) <- df$Level
#  df$Level <- NULL
df_list[[i]] <- df
i = i + 1
}
View(df_list)
Reduce(function(...) merge(..., by = 'Level', all = T), df_list)
cmpd_names
len(cmpd_names)
length(cmpd_names)
lenght(class_list)
length(class_list)
as.data.frame(classification(tab)
)
Classification
meta(tab)$inchikey
df_list <- list()
i = 1
for (tab in class_list){
df <- as.data.frame(classification(tab)[,1:2])
colnames(df)[2] <- meta(tab)$inchikey
#  rownames(df) <- df$Level
#  df$Level <- NULL
df_list[[i]] <- df
i = i + 1
}
tab <- Reduce(function(...) merge(..., by = 'Level', all = T), df_list)
View(tab)
temp
for (t in temp[,1:10]){}
for (t in temp[1:10,]){print(t)}
for (t in temp[1:10,]){print(t); print('')}
for (t in temp[1:2,]){print(t); print('')}
temp[1,]
for (name, key in temp[1:10,]){print(name)}
for ((name, key) in temp[1:10,]){print(name)}
Classification
source('~/Dropbox (MIT)/Microbes to Metabolomes/Code/use_classy_fire.R')
tab
View(tab)
colnames(tab) <- tab$Level
View(tab)
tab <- Reduce(function(...) merge(..., by = 'Level', all = T), df_list)
rownames(tab) <- tab$Level
View(tab)
tab[c("kingdome","superclass", "class", "subclass", "level 5", "level 6", "level 7", "level 8")]
tab[c("kingdome","superclass", "class", "subclass", "level 5", "level 6", "level 7", "level 8"),]
View(tab)
source('~/Dropbox (MIT)/Microbes to Metabolomes/Code/use_classy_fire.R')
source('~/Dropbox (MIT)/Microbes to Metabolomes/Code/use_classy_fire.R')
Classification
name <- temp[row, 1]
source('~/Dropbox (MIT)/Microbes to Metabolomes/Code/use_classy_fire.R')
df_list
View(tab)
len(df_list)
length(df_list)
View(df_list)
for (t in df_list){}
for (it in 1:length(df_list)){if (is.null(df_list[it])){print(it)}}
df_list[1].size
df_list[1].size()
size(df_list[1])
size(df_list[2])
size(df_list[[1]])
df_list[1]
df_list[1][[1]]
for (it in 1:length(df_list)){if (is.null(df_list[it][[1]])){print(it)}}
length(df_list[-509])
df_list <- df_list[-509]
tab <- Reduce(function(...) merge(..., by = 'Level', all = T), df_list)
View(tab)
rownames(tab) <- tab$Level
tab$Level <- NULL
tab_sort <- tab[c("kingdom","superclass", "class", "subclass", "level 5", "level 6", "level 7", "level 8", "level 9", "level 10")]
tab_sort <- tab[c("kingdom","superclass", "class", "subclass", "level 5", "level 6", "level 7", "level 8", "level 9", "level 10"),]
write.table(tab_sort, file = "/Users/jendawk/Dropbox (MIT)/M2M/inputs/classy_fire_df.csv")
write.table(tab_sort, file = "/Users/jendawk/Dropbox (MIT)/M2M/inputs/classy_fire_df.csv", sep = ',', row.names = TRUE, col.names = TRUE)
tab <- Reduce(function(...) merge(..., by = 'Level', all = T), df_list)
tab$Level <- NULL
rownames(tab) <- tab$Level
tab_sort <- tab[c("kingdom","superclass", "class", "subclass", "level 5", "level 6", "level 7", "level 8", "level 9", "level 10"),]
write.table(tab_sort, file = "/Users/jendawk/Dropbox (MIT)/M2M/inputs/classy_fire_df.csv", sep = ',', row.names = TRUE, col.names = TRUE)
tab <- Reduce(function(...) merge(..., by = 'Level', all = T), df_list)
rownames(tab) <- tab$Level
tab_sort <- tab[c("kingdom","superclass", "class", "subclass", "level 5", "level 6", "level 7", "level 8", "level 9", "level 10"),]
View(tab_sort)
write.table(tab_sort, file = "/Users/jendawk/Dropbox (MIT)/M2M/inputs/classy_fire_df.csv", sep = ',', row.names = TRUE, col.names = TRUE)
tab_sort$Level <- NULL
write.table(tab_sort, file = "/Users/jendawk/Dropbox (MIT)/M2M/inputs/classy_fire_df.csv", sep = ',', row.names = TRUE, col.names = TRUE)
View(tab_sort)
write.table(tab_sort, file = "/Users/jendawk/Dropbox (MIT)/M2M/inputs/classy_fire_df.csv", sep = ',', row.names = TRUE, col.names = NA)
